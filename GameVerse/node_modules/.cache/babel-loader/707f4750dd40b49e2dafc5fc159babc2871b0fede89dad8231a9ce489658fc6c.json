{"ast":null,"code":"class ChessPiece {\n  constructor(name, isAttacked, color, id) {\n    this.name = name; // string\n    this.isAttacked = isAttacked; // boolean\n    this.color = color; // string\n    this.id = id; // string\n  }\n\n  setSquare(newSquare) {\n    // set the square this piece is sitting top of. \n    // on any given piece (on the board), there will always be a piece on top of it. \n    // console.log(newSquare)\n    if (newSquare === undefined) {\n      this.squareThisPieceIsOn = newSquare;\n      return;\n    }\n    if (this.squareThisPieceIsOn === undefined) {\n      this.squareThisPieceIsOn = newSquare;\n      newSquare.setPiece(this);\n    }\n    const isNewSquareDifferent = this.squareThisPieceIsOn.x != newSquare.x || this.squareThisPieceIsOn.y != newSquare.y;\n    if (isNewSquareDifferent) {\n      // console.log(\"set\")\n      this.squareThisPieceIsOn = newSquare;\n      newSquare.setPiece(this);\n    }\n  }\n  getSquare() {\n    return this.squareThisPieceIsOn;\n  }\n}\nexport default ChessPiece;","map":{"version":3,"names":["ChessPiece","constructor","name","isAttacked","color","id","setSquare","newSquare","undefined","squareThisPieceIsOn","setPiece","isNewSquareDifferent","x","y","getSquare"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/Chess/model/ChessPiece.js"],"sourcesContent":["class ChessPiece {\n    constructor(name, isAttacked, color, id) {\n        this.name = name // string\n        this.isAttacked = isAttacked // boolean\n        this.color = color // string\n        this.id = id // string\n    }\n\n    setSquare(newSquare) {\n        // set the square this piece is sitting top of. \n        // on any given piece (on the board), there will always be a piece on top of it. \n        // console.log(newSquare)\n        if (newSquare === undefined) {\n            this.squareThisPieceIsOn = newSquare\n            return\n        }\n\n        if (this.squareThisPieceIsOn === undefined) {\n            this.squareThisPieceIsOn = newSquare\n            newSquare.setPiece(this)\n        }\n\n        const isNewSquareDifferent = this.squareThisPieceIsOn.x != newSquare.x || this.squareThisPieceIsOn.y != newSquare.y\n\n        if (isNewSquareDifferent) {\n            // console.log(\"set\")\n            this.squareThisPieceIsOn = newSquare\n            newSquare.setPiece(this)\n        }\n    }\n\n    getSquare() {\n        return this.squareThisPieceIsOn\n    }\n}\n\n\nexport default ChessPiece"],"mappings":"AAAA,MAAMA,UAAU,CAAC;EACbC,WAAW,CAACC,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,EAAE,EAAE;IACrC,IAAI,CAACH,IAAI,GAAGA,IAAI,EAAC;IACjB,IAAI,CAACC,UAAU,GAAGA,UAAU,EAAC;IAC7B,IAAI,CAACC,KAAK,GAAGA,KAAK,EAAC;IACnB,IAAI,CAACC,EAAE,GAAGA,EAAE,EAAC;EACjB;;EAEAC,SAAS,CAACC,SAAS,EAAE;IACjB;IACA;IACA;IACA,IAAIA,SAAS,KAAKC,SAAS,EAAE;MACzB,IAAI,CAACC,mBAAmB,GAAGF,SAAS;MACpC;IACJ;IAEA,IAAI,IAAI,CAACE,mBAAmB,KAAKD,SAAS,EAAE;MACxC,IAAI,CAACC,mBAAmB,GAAGF,SAAS;MACpCA,SAAS,CAACG,QAAQ,CAAC,IAAI,CAAC;IAC5B;IAEA,MAAMC,oBAAoB,GAAG,IAAI,CAACF,mBAAmB,CAACG,CAAC,IAAIL,SAAS,CAACK,CAAC,IAAI,IAAI,CAACH,mBAAmB,CAACI,CAAC,IAAIN,SAAS,CAACM,CAAC;IAEnH,IAAIF,oBAAoB,EAAE;MACtB;MACA,IAAI,CAACF,mBAAmB,GAAGF,SAAS;MACpCA,SAAS,CAACG,QAAQ,CAAC,IAAI,CAAC;IAC5B;EACJ;EAEAI,SAAS,GAAG;IACR,OAAO,IAAI,CAACL,mBAAmB;EACnC;AACJ;AAGA,eAAeT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}