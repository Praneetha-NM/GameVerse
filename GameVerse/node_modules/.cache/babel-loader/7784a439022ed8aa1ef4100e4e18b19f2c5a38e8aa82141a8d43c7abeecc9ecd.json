{"ast":null,"code":"var _jsxFileName = \"/Users/praneetha18/Downloads/games-app-main/src/components/2048/Game.js\";\nimport React, { Component } from 'react';\nimport './Main.css';\nimport Dashboard from './Dashboard';\nimport './swiped-event.js';\nimport Stats from './Stats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Game extends Component {\n  constructor(props) {\n    super(props);\n    this.movesCombinesLeft = dashboard => {\n      dashboard = this.moveCellsLeft(dashboard);\n      dashboard = this.combiningCells(dashboard);\n      return this.moveCellsLeft(dashboard);\n    };\n    this.moveCellsLeft = dashboard => {\n      var auxDash = this.makeCopy(dashboard);\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          if (auxDash[i][j] === 0 && auxDash[i][j + 1] === 0) {\n            auxDash[i].splice(j, 2); //removes 2 elements from the index j\n            auxDash[i].splice(2, 0, 0, 0); //removes 0 elements from index 2 and adds two zeros\n          }\n\n          if (auxDash[i][j] === 0) {\n            auxDash[i].splice(j, 1);\n            auxDash[i].splice(3, 0, 0);\n          }\n        }\n      }\n      return auxDash;\n    };\n    this.movesCombinesRight = dashboard => {\n      dashboard = this.moveCellsRight(dashboard);\n      dashboard = this.combiningCells(dashboard);\n      return this.moveCellsRight(dashboard);\n    };\n    this.moveCellsRight = dashboard => {\n      var auxDash = this.makeCopy(dashboard);\n      for (let i = 3; i >= 0; i--) {\n        let current = 3;\n        for (let j = 3; j >= 0; j--) {\n          if (auxDash[i][j] !== 0) {\n            auxDash[i][current] = auxDash[i][j];\n            current--;\n          }\n        }\n        while (current >= 0) {\n          auxDash[i][current] = 0;\n          current--;\n        }\n      }\n      return auxDash;\n    };\n    this.transposeDashboard = dashboard => {\n      var auxiliar_dashboard = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) auxiliar_dashboard[i][j] = dashboard[j][i];\n      }\n      return auxiliar_dashboard;\n    };\n    this.differentPosition = (positionCellA, positionCellB, auxiliar_dashboard_length) => {\n      while (positionCellA === positionCellB) positionCellB = Math.floor(Math.random() * auxiliar_dashboard_length);\n      return positionCellB;\n    };\n    this.restartGame = () => {\n      var auxiliar_dashboard = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n      var randomNumber = Math.random() < 0.9 ? 2 : 4,\n        randomNumber2 = Math.random() < 0.9 ? 2 : 4;\n      var randomPosition = Math.floor(Math.random() * auxiliar_dashboard.length),\n        randomPosition2 = Math.floor(Math.random() * auxiliar_dashboard.length);\n      auxiliar_dashboard[randomPosition].splice(randomPosition2, 1, randomNumber);\n      var randomPosition3 = Math.floor(Math.random() * auxiliar_dashboard.length),\n        randomPosition4 = Math.floor(Math.random() * auxiliar_dashboard.length);\n      auxiliar_dashboard[this.differentPosition(randomPosition, randomPosition3, auxiliar_dashboard.length)].splice(this.differentPosition(randomPosition2, randomPosition4, auxiliar_dashboard.length), 1, randomNumber2);\n      this.setState({\n        dashboard: auxiliar_dashboard,\n        score: 0\n      });\n    };\n    this.combiningCells = dashboard => {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 3; j >= 1; j--) {\n          let cellA = dashboard[i][j];\n          let cellB = dashboard[i][j - 1];\n          if (cellA === cellB) {\n            dashboard[i][j] = cellA + cellB;\n            this.setState({\n              score: this.state.score + dashboard[i][j]\n            });\n            dashboard[i][j - 1] = 0;\n          }\n        }\n      }\n      return dashboard;\n    };\n    this.newNumber = () => {\n      var auxDash = this.state.dashboard,\n        cellAvailableX = [],\n        cellAvailableY = [];\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          if (auxDash[i][j] === 0) {\n            cellAvailableX.push(i);\n            cellAvailableY.push(j);\n          }\n        }\n      }\n      var randomPosition = Math.floor(Math.random() * cellAvailableX.length);\n      if (cellAvailableX.length > 0) {\n        var auxiliar_dashboard_2 = this.makeCopy(this.state.dashboard);\n        auxiliar_dashboard_2[cellAvailableX[randomPosition]][cellAvailableY[randomPosition]] = Math.random() < 0.9 ? 2 : 4;\n        this.setState({\n          dashboard: auxiliar_dashboard_2\n        });\n      }\n\n      //Checking if by adding a new number the user has won or lost the game\n      if (this.gameResult()) {\n        this.setState({\n          loading: true\n        });\n      }\n    };\n    this.gameResult = () => {\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) {\n          if (this.state.dashboard[i][j] === 2048) alert('YOU HAVE WON THE GAME');else if (this.state.dashboard[i][j] === 0 || i !== 3 && this.state.dashboard[i][j] === this.state.dashboard[i + 1][j] || j !== 3 && this.state.dashboard[i][j] === this.state.dashboard[i][j + 1]) {\n            //False in case it is possible to add a new number to the dashboard or it is possible to merge two cells\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n    this.makeCopy = dashboard => {\n      var auxiliar_dashboard = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n      for (let i = 0; i < 4; i++) {\n        for (let j = 0; j < 4; j++) auxiliar_dashboard[i][j] = dashboard[i][j];\n      }\n      return auxiliar_dashboard;\n    };\n    this.render = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Stats, {\n          score: this.state.score,\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Dashboard, {\n          dashboard: this.state.dashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 4\n      }, this);\n    };\n    this.state = {\n      dashboard: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n      score: 0,\n      loading: false\n    };\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n  componentDidMount() {\n    this.restartGame();\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  handleKeyPress(event) {\n    //Left arrow\n    if (event.key === \"ArrowLeft\") {\n      this.state.dashboard = this.movesCombinesLeft(this.state.dashboard);\n    } else if (event.keyCode === 38) {\n      //Up arrow\n      let auxiliar_dashboard = this.transposeDashboard(this.state.dashboard);\n      auxiliar_dashboard = this.movesCombinesLeft(auxiliar_dashboard);\n      this.state.dashboard = this.transposeDashboard(auxiliar_dashboard);\n    } else if (event.keyCode === 39) {\n      //Right arrow\n      this.state.dashboard = this.movesCombinesRight(this.state.dashboard);\n    } else if (event.keyCode === 40) {\n      //Down arrow\n      let auxiliar_dashboard = this.transposeDashboard(this.state.dashboard);\n      auxiliar_dashboard = this.movesCombinesRight(auxiliar_dashboard);\n      this.state.dashboard = this.transposeDashboard(auxiliar_dashboard);\n    }\n    this.newNumber();\n  }\n\n  //Moves to the left, combine and moves to the left again\n}","map":{"version":3,"names":["React","Component","Dashboard","Stats","Game","constructor","props","movesCombinesLeft","dashboard","moveCellsLeft","combiningCells","auxDash","makeCopy","i","j","splice","movesCombinesRight","moveCellsRight","current","transposeDashboard","auxiliar_dashboard","differentPosition","positionCellA","positionCellB","auxiliar_dashboard_length","Math","floor","random","restartGame","randomNumber","randomNumber2","randomPosition","length","randomPosition2","randomPosition3","randomPosition4","setState","score","cellA","cellB","state","newNumber","cellAvailableX","cellAvailableY","push","auxiliar_dashboard_2","gameResult","loading","alert","render","handleKeyPress","bind","componentDidMount","document","addEventListener","componentWillUnmount","event","key","keyCode"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/2048/Game.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './Main.css';\nimport Dashboard from './Dashboard';\nimport './swiped-event.js';\nimport Stats from './Stats';\n\nexport default class Game extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdashboard: [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n\t\t\tscore: 0,\n\t\t\tloading: false\n\t\t};\n\t\tthis.handleKeyPress = this.handleKeyPress.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.restartGame();\n\t\tdocument.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.addEventListener('keydown', this.handleKeyPress);\n\t}\n\n\thandleKeyPress(event) {\n\t\t//Left arrow\n\t\tif (event.key === \"ArrowLeft\") {\n\t\t\tthis.state.dashboard = this.movesCombinesLeft(this.state.dashboard)\n\t\t} else if (event.keyCode === 38) {\n\t\t\t//Up arrow\n\t\t\tlet auxiliar_dashboard = this.transposeDashboard(this.state.dashboard);\n\t\t\tauxiliar_dashboard = this.movesCombinesLeft(auxiliar_dashboard);\n\t\t\tthis.state.dashboard = this.transposeDashboard(auxiliar_dashboard)\n\t\t} else if (event.keyCode === 39) {\n\t\t\t//Right arrow\n\t\t\tthis.state.dashboard = this.movesCombinesRight(this.state.dashboard)\n\t\t} else if (event.keyCode === 40) {\n\t\t\t//Down arrow\n\t\t\tlet auxiliar_dashboard = this.transposeDashboard(this.state.dashboard);\n\t\t\tauxiliar_dashboard = this.movesCombinesRight(auxiliar_dashboard);\n\t\t\tthis.state.dashboard = this.transposeDashboard(auxiliar_dashboard)\n\t\t}\n\n\t\tthis.newNumber();\n\t}\n\n\t//Moves to the left, combine and moves to the left again\n\tmovesCombinesLeft = (dashboard) => {\n\t\tdashboard = this.moveCellsLeft(dashboard);\n\t\tdashboard = this.combiningCells(dashboard);\n\t\treturn this.moveCellsLeft(dashboard);\n\t};\n\n\t//Move all the zero to the Right side of the row\n\tmoveCellsLeft = (dashboard) => {\n\t\tvar auxDash = this.makeCopy(dashboard);\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tif (auxDash[i][j] === 0 && auxDash[i][j + 1] === 0) {\n\t\t\t\t\tauxDash[i].splice(j, 2); //removes 2 elements from the index j\n\t\t\t\t\tauxDash[i].splice(2, 0, 0, 0); //removes 0 elements from index 2 and adds two zeros\n\t\t\t\t}\n\t\t\t\tif (auxDash[i][j] === 0) {\n\t\t\t\t\tauxDash[i].splice(j, 1);\n\t\t\t\t\tauxDash[i].splice(3, 0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn auxDash;\n\t};\n\n\t//Moves to the Right, combine and moves to the Right again\n\tmovesCombinesRight = (dashboard) => {\n\t\tdashboard = this.moveCellsRight(dashboard);\n\t\tdashboard = this.combiningCells(dashboard);\n\t\treturn this.moveCellsRight(dashboard);\n\t};\n\n\t//Move all the zero to the left side of the row\n\tmoveCellsRight = (dashboard) => {\n\t\tvar auxDash = this.makeCopy(dashboard);\n\t\tfor (let i = 3; i >= 0; i--) {\n\t\t\tlet current = 3;\n\t\t\tfor (let j = 3; j >= 0; j--) {\n\t\t\t\tif (auxDash[i][j] !== 0) {\n\t\t\t\t\tauxDash[i][current] = auxDash[i][j];\n\t\t\t\t\tcurrent--;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (current >= 0) {\n\t\t\t\tauxDash[i][current] = 0;\n\t\t\t\tcurrent--;\n\t\t\t}\n\t\t}\n\t\treturn auxDash;\n\t};\n\n\ttransposeDashboard = (dashboard) => {\n\t\tvar auxiliar_dashboard = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) auxiliar_dashboard[i][j] = dashboard[j][i];\n\t\t}\n\t\treturn auxiliar_dashboard;\n\t};\n\n\t//Make sure the position of the cell of A and B are different\n\tdifferentPosition = (positionCellA, positionCellB, auxiliar_dashboard_length) => {\n\t\twhile (positionCellA === positionCellB) positionCellB = Math.floor(Math.random() * auxiliar_dashboard_length);\n\t\treturn positionCellB;\n\t};\n\n\t//Restart the game\n\trestartGame = () => {\n\t\tvar auxiliar_dashboard = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n\t\tvar randomNumber = Math.random() < 0.9 ? 2 : 4,\n\t\t\trandomNumber2 = Math.random() < 0.9 ? 2 : 4;\n\t\tvar randomPosition = Math.floor(Math.random() * auxiliar_dashboard.length),\n\t\t\trandomPosition2 = Math.floor(Math.random() * auxiliar_dashboard.length);\n\n\t\tauxiliar_dashboard[randomPosition].splice(randomPosition2, 1, randomNumber);\n\n\t\tvar randomPosition3 = Math.floor(Math.random() * auxiliar_dashboard.length),\n\t\t\trandomPosition4 = Math.floor(Math.random() * auxiliar_dashboard.length);\n\n\t\tauxiliar_dashboard[this.differentPosition(randomPosition, randomPosition3, auxiliar_dashboard.length)].splice(\n\t\t\tthis.differentPosition(randomPosition2, randomPosition4, auxiliar_dashboard.length),\n\t\t\t1,\n\t\t\trandomNumber2\n\t\t);\n\n\t\tthis.setState({\n\t\t\tdashboard: auxiliar_dashboard,\n\t\t\tscore: 0\n\t\t});\n\t};\n\n\t//Combine cells\n\tcombiningCells = (dashboard) => {\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 3; j >= 1; j--) {\n\t\t\t\tlet cellA = dashboard[i][j];\n\t\t\t\tlet cellB = dashboard[i][j - 1];\n\t\t\t\tif (cellA === cellB) {\n\t\t\t\t\tdashboard[i][j] = cellA + cellB;\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tscore: this.state.score + dashboard[i][j]\n\t\t\t\t\t});\n\t\t\t\t\tdashboard[i][j - 1] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dashboard;\n\t};\n\n\t//Add new number to the game\n\tnewNumber = () => {\n\t\tvar auxDash = this.state.dashboard,\n\t\t\tcellAvailableX = [],\n\t\t\tcellAvailableY = [];\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tif (auxDash[i][j] === 0) {\n\t\t\t\t\tcellAvailableX.push(i);\n\t\t\t\t\tcellAvailableY.push(j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tvar randomPosition = Math.floor(Math.random() * cellAvailableX.length);\n\n\t\tif (cellAvailableX.length > 0) {\n\t\t\tvar auxiliar_dashboard_2 = this.makeCopy(this.state.dashboard);\n\t\t\tauxiliar_dashboard_2[cellAvailableX[randomPosition]][cellAvailableY[randomPosition]] =\n\t\t\t\tMath.random() < 0.9 ? 2 : 4;\n\t\t\tthis.setState({\n\t\t\t\tdashboard: auxiliar_dashboard_2\n\t\t\t});\n\t\t}\n\n\t\t//Checking if by adding a new number the user has won or lost the game\n\t\tif (this.gameResult()) {\n\t\t\tthis.setState({\n\t\t\t\tloading: true\n\t\t\t})\n\t\t}\n\t};\n\n\t//Won the game or Game Over\n\tgameResult = () => {\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tif (this.state.dashboard[i][j] === 2048) alert('YOU HAVE WON THE GAME');\n\t\t\t\telse if (\n\t\t\t\t\tthis.state.dashboard[i][j] === 0 ||\n\t\t\t\t\t(i !== 3 && this.state.dashboard[i][j] === this.state.dashboard[i + 1][j]) ||\n\t\t\t\t\t(j !== 3 && this.state.dashboard[i][j] === this.state.dashboard[i][j + 1])\n\t\t\t\t) {\n\t\t\t\t\t//False in case it is possible to add a new number to the dashboard or it is possible to merge two cells\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\tmakeCopy = (dashboard) => {\n\t\tvar auxiliar_dashboard = [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]];\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) auxiliar_dashboard[i][j] = dashboard[i][j];\n\t\t}\n\t\treturn auxiliar_dashboard;\n\t};\n\n\trender = () => {\n\t\treturn (\n\t\t\t<div className=\"gameContainer\">\n\t\t\t\t<Stats score={this.state.score} loading={this.state.loading}/>\n\t\t\t\t<Dashboard dashboard={this.state.dashboard} />\n\t\t\t</div>\n\t\t);\n\t};\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}