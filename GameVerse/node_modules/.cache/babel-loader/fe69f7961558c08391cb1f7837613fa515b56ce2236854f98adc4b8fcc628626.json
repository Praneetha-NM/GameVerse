{"ast":null,"code":"var _jsxFileName = \"/Users/praneetha18/Downloads/games-app-main/src/components/Tetris/GameController.js\",\n  _s = $RefreshSig$();\nimport \"./GameController.css\";\nimport { Action, actionForKey, actionIsDrop } from \"./business/Input\";\nimport { playerController } from \"./business/PlayerController\";\nimport { useDropTime } from \"./hooks/useDropTime\";\nimport { useInterval } from \"./hooks/useInterval\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameController = _ref => {\n  _s();\n  let {\n    board,\n    gameStats,\n    player,\n    setGameOver,\n    setPlayer,\n    setLoading\n  } = _ref;\n  const [dropTime, pauseDropTime, resumeDropTime] = useDropTime({\n    gameStats\n  });\n  useInterval(() => {\n    handleInput({\n      action: Action.SlowDrop\n    });\n  }, dropTime);\n  const onKeyUp = _ref2 => {\n    let {\n      code\n    } = _ref2;\n    const action = actionForKey(code);\n    if (actionIsDrop(action)) resumeDropTime();\n  };\n  const onKeyDown = _ref3 => {\n    let {\n      code\n    } = _ref3;\n    const action = actionForKey(code);\n    if (action === Action.Pause) {\n      if (dropTime) {\n        pauseDropTime();\n      } else {\n        resumeDropTime();\n      }\n    } else if (action === Action.Quit) {\n      setGameOver(true);\n      setLoading(true);\n    } else {\n      if (actionIsDrop(action)) pauseDropTime();\n      if (!dropTime) {\n        return;\n      }\n      handleInput({\n        action\n      });\n    }\n  };\n  const handleInput = _ref4 => {\n    let {\n      action\n    } = _ref4;\n    playerController({\n      action,\n      board,\n      player,\n      setPlayer,\n      setGameOver,\n      setLoading\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"GameController\",\n    type: \"text\",\n    onKeyDown: onKeyDown,\n    onKeyUp: onKeyUp,\n    autoFocus: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(GameController, \"ELe5AZSYY6SuDPBzJQOuhc+RWbI=\", false, function () {\n  return [useDropTime, useInterval];\n});\n_c = GameController;\nexport default GameController;\nvar _c;\n$RefreshReg$(_c, \"GameController\");","map":{"version":3,"names":["Action","actionForKey","actionIsDrop","playerController","useDropTime","useInterval","GameController","board","gameStats","player","setGameOver","setPlayer","setLoading","dropTime","pauseDropTime","resumeDropTime","handleInput","action","SlowDrop","onKeyUp","code","onKeyDown","Pause","Quit"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/Tetris/GameController.js"],"sourcesContent":["import \"./GameController.css\";\n\nimport { Action, actionForKey, actionIsDrop } from \"./business/Input\";\nimport { playerController } from \"./business/PlayerController\";\n\nimport { useDropTime } from \"./hooks/useDropTime\";\nimport { useInterval } from \"./hooks/useInterval\";\n\nconst GameController = ({\n    board,\n    gameStats,\n    player,\n    setGameOver,\n    setPlayer,\n    setLoading\n}) => {\n    const [dropTime, pauseDropTime, resumeDropTime] = useDropTime({\n        gameStats\n    });\n\n    useInterval(() => {\n        handleInput({ action: Action.SlowDrop });\n    }, dropTime);\n\n    const onKeyUp = ({ code }) => {\n        const action = actionForKey(code);\n        if (actionIsDrop(action)) resumeDropTime();\n    };\n\n    const onKeyDown = ({ code }) => {\n        const action = actionForKey(code);\n\n        if (action === Action.Pause) {\n            if (dropTime) {\n                pauseDropTime();\n            } else {\n                resumeDropTime();\n            }\n        } else if (action === Action.Quit) {\n            setGameOver(true);\n            setLoading(true);\n        } else {\n            if (actionIsDrop(action)) pauseDropTime();\n            if (!dropTime) {\n                return;\n            }\n            handleInput({ action });\n        }\n    };\n\n    const handleInput = ({ action }) => {\n        playerController({\n            action,\n            board,\n            player,\n            setPlayer,\n            setGameOver,\n            setLoading\n        });\n    };\n\n    return (\n        <input\n            className=\"GameController\"\n            type=\"text\"\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n            autoFocus\n        />\n    );\n};\n\nexport default GameController;\n"],"mappings":";;AAAA,OAAO,sBAAsB;AAE7B,SAASA,MAAM,EAAEC,YAAY,EAAEC,YAAY,QAAQ,kBAAkB;AACrE,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,WAAW,QAAQ,qBAAqB;AAAC;AAElD,MAAMC,cAAc,GAAG,QAOjB;EAAA;EAAA,IAPkB;IACpBC,KAAK;IACLC,SAAS;IACTC,MAAM;IACNC,WAAW;IACXC,SAAS;IACTC;EACJ,CAAC;EACG,MAAM,CAACC,QAAQ,EAAEC,aAAa,EAAEC,cAAc,CAAC,GAAGX,WAAW,CAAC;IAC1DI;EACJ,CAAC,CAAC;EAEFH,WAAW,CAAC,MAAM;IACdW,WAAW,CAAC;MAAEC,MAAM,EAAEjB,MAAM,CAACkB;IAAS,CAAC,CAAC;EAC5C,CAAC,EAAEL,QAAQ,CAAC;EAEZ,MAAMM,OAAO,GAAG,SAAc;IAAA,IAAb;MAAEC;IAAK,CAAC;IACrB,MAAMH,MAAM,GAAGhB,YAAY,CAACmB,IAAI,CAAC;IACjC,IAAIlB,YAAY,CAACe,MAAM,CAAC,EAAEF,cAAc,EAAE;EAC9C,CAAC;EAED,MAAMM,SAAS,GAAG,SAAc;IAAA,IAAb;MAAED;IAAK,CAAC;IACvB,MAAMH,MAAM,GAAGhB,YAAY,CAACmB,IAAI,CAAC;IAEjC,IAAIH,MAAM,KAAKjB,MAAM,CAACsB,KAAK,EAAE;MACzB,IAAIT,QAAQ,EAAE;QACVC,aAAa,EAAE;MACnB,CAAC,MAAM;QACHC,cAAc,EAAE;MACpB;IACJ,CAAC,MAAM,IAAIE,MAAM,KAAKjB,MAAM,CAACuB,IAAI,EAAE;MAC/Bb,WAAW,CAAC,IAAI,CAAC;MACjBE,UAAU,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACH,IAAIV,YAAY,CAACe,MAAM,CAAC,EAAEH,aAAa,EAAE;MACzC,IAAI,CAACD,QAAQ,EAAE;QACX;MACJ;MACAG,WAAW,CAAC;QAAEC;MAAO,CAAC,CAAC;IAC3B;EACJ,CAAC;EAED,MAAMD,WAAW,GAAG,SAAgB;IAAA,IAAf;MAAEC;IAAO,CAAC;IAC3Bd,gBAAgB,CAAC;MACbc,MAAM;MACNV,KAAK;MACLE,MAAM;MACNE,SAAS;MACTD,WAAW;MACXE;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACI;IACI,SAAS,EAAC,gBAAgB;IAC1B,IAAI,EAAC,MAAM;IACX,SAAS,EAAES,SAAU;IACrB,OAAO,EAAEF,OAAQ;IACjB,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEV,CAAC;AAAC,GA9DIb,cAAc;EAAA,QAQkCF,WAAW,EAI7DC,WAAW;AAAA;AAAA,KAZTC,cAAc;AAgEpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}