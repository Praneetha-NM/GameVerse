{"ast":null,"code":"var _jsxFileName = \"/Users/praneetha18/Downloads/games-app-main/src/components/Wordle/Letter.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { BoardContext } from './Wordle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Letter = _ref => {\n  _s();\n  let {\n    letterPos,\n    attemptVal\n  } = _ref;\n  const {\n    board,\n    correctWord,\n    currentAttempt,\n    setDisabledLetters\n  } = useContext(BoardContext);\n  const letter = board[attemptVal][letterPos];\n  const correct = correctWord.toUpperCase()[letterPos] === letter;\n  const almost = !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter);\n  var letterState = currentAttempt.attempt > attemptVal && (correct ? \"correct\" : almost ? \"almost\" : \"error\");\n  useEffect(() => {\n    if (letter !== \"\" && !correct && !almost) setDisabledLetters(prev => [...prev, letter]);\n\n    // eslint-disable-next-line\n  }, [currentAttempt.attempt]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wordle-letter\",\n    id: letterState,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Letter, \"o/2NB51YLa4VZXDl8nTQULBUbCk=\");\n_c = Letter;\nexport default Letter;\nvar _c;\n$RefreshReg$(_c, \"Letter\");","map":{"version":3,"names":["React","useContext","useEffect","BoardContext","Letter","letterPos","attemptVal","board","correctWord","currentAttempt","setDisabledLetters","letter","correct","toUpperCase","almost","includes","letterState","attempt","prev"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/Wordle/Letter.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { BoardContext } from './Wordle'\n\nconst Letter = ({ letterPos, attemptVal }) => {\n    const { board, correctWord, currentAttempt, setDisabledLetters } = useContext(BoardContext)\n    const letter = board[attemptVal][letterPos]\n\n    const correct = correctWord.toUpperCase()[letterPos] === letter\n    const almost = !correct && letter !== \"\" && correctWord.toUpperCase().includes(letter)\n\n    var letterState = (currentAttempt.attempt > attemptVal) &&\n        (correct ? \"correct\" : almost ? \"almost\" : \"error\")\n\n    useEffect(() => {\n        if (letter !== \"\" && !correct && !almost)\n            setDisabledLetters((prev) => [...prev, letter]);\n\n        // eslint-disable-next-line\n    }, [currentAttempt.attempt]);\n\n    return (\n        <div className='wordle-letter' id={letterState}>{letter}</div>\n    )\n}\n\nexport default Letter"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,YAAY,QAAQ,UAAU;AAAA;AAEvC,MAAMC,MAAM,GAAG,QAA+B;EAAA;EAAA,IAA9B;IAAEC,SAAS;IAAEC;EAAW,CAAC;EACrC,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,cAAc;IAAEC;EAAmB,CAAC,GAAGT,UAAU,CAACE,YAAY,CAAC;EAC3F,MAAMQ,MAAM,GAAGJ,KAAK,CAACD,UAAU,CAAC,CAACD,SAAS,CAAC;EAE3C,MAAMO,OAAO,GAAGJ,WAAW,CAACK,WAAW,EAAE,CAACR,SAAS,CAAC,KAAKM,MAAM;EAC/D,MAAMG,MAAM,GAAG,CAACF,OAAO,IAAID,MAAM,KAAK,EAAE,IAAIH,WAAW,CAACK,WAAW,EAAE,CAACE,QAAQ,CAACJ,MAAM,CAAC;EAEtF,IAAIK,WAAW,GAAIP,cAAc,CAACQ,OAAO,GAAGX,UAAU,KACjDM,OAAO,GAAG,SAAS,GAAGE,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;EAEvDZ,SAAS,CAAC,MAAM;IACZ,IAAIS,MAAM,KAAK,EAAE,IAAI,CAACC,OAAO,IAAI,CAACE,MAAM,EACpCJ,kBAAkB,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEP,MAAM,CAAC,CAAC;;IAEnD;EACJ,CAAC,EAAE,CAACF,cAAc,CAACQ,OAAO,CAAC,CAAC;EAE5B,oBACI;IAAK,SAAS,EAAC,eAAe;IAAC,EAAE,EAAED,WAAY;IAAA,UAAEL;EAAM;IAAA;IAAA;IAAA;EAAA,QAAO;AAEtE,CAAC;AAAA,GApBKP,MAAM;AAAA,KAANA,MAAM;AAsBZ,eAAeA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}