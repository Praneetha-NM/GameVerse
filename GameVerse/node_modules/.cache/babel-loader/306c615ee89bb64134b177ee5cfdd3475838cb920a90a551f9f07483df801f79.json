{"ast":null,"code":"var _jsxFileName = \"/Users/praneetha18/Downloads/games-app-main/src/components/Main/Login/Login.js\",\n  _s = $RefreshSig$();\nimport NavBar from '../NavBar/NavBar';\nimport './Login.css';\nimport GoogleLogin from 'react-google-login';\nimport trophy from '../../../assets/home/trophy.png';\nimport { useEffect, useState } from 'react';\nimport Loader from '../../Loader/Loader';\nimport useUserStore from '../../../store/user';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const setDetails = useUserStore(state => state.setDetails);\n  const signIn = async () => {\n    const res = await fetch(`${process.env.REACT_APP_BASE_URL}/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n    const res_data = await res.json();\n    console.log(res_data);\n    setDetails(res_data);\n    setLoading(false);\n    if (res.status === 200) {\n      navigate(\"/\");\n    } else {\n      alert(\"Could Not Sign In \");\n    }\n  };\n  useEffect(() => {\n    if (data !== null) signIn();\n  }, [data]);\n  const handleFailure = res => {\n    alert(res);\n  };\n  const handleLogin = data => {\n    const {\n      email,\n      name,\n      imageUrl,\n      googleId\n    } = data.profileObj;\n    setData({\n      email,\n      name,\n      imageUrl,\n      googleId\n    });\n    setLoading(true);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 16\n  }, this);else return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"google-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login With Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: trophy,\n        alt: \"Winner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        buttonText: \"Login With Google\",\n        onSuccess: handleLogin,\n        onFailure: handleFailure,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"tt8GMgNcNG+my55uXXhTFezI6Qs=\", false, function () {\n  return [useNavigate, useUserStore];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["NavBar","GoogleLogin","trophy","useEffect","useState","Loader","useUserStore","useNavigate","Login","data","setData","loading","setLoading","navigate","setDetails","state","signIn","res","fetch","process","env","REACT_APP_BASE_URL","method","headers","body","JSON","stringify","res_data","json","console","log","status","alert","handleFailure","handleLogin","email","name","imageUrl","googleId","profileObj","REACT_APP_GOOGLE_CLIENT_ID"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/Main/Login/Login.js"],"sourcesContent":["import NavBar from '../NavBar/NavBar'\nimport './Login.css'\nimport GoogleLogin from 'react-google-login'\nimport trophy from '../../../assets/home/trophy.png'\nimport { useEffect, useState } from 'react'\nimport Loader from '../../Loader/Loader'\nimport useUserStore from '../../../store/user'\nimport { useNavigate } from 'react-router-dom'\n\nconst Login = () => {\n    const [data, setData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const navigate = useNavigate()\n    const setDetails = useUserStore((state) => state.setDetails);\n\n    const signIn = async () => {\n        const res = await fetch(`${process.env.REACT_APP_BASE_URL}/login`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        });\n\n        const res_data = await res.json();\n        console.log(res_data)\n        setDetails(res_data)    \n\n        setLoading(false);\n        if (res.status === 200) {\n            navigate(\"/\");\n        } else {\n            alert(\"Could Not Sign In \");\n        }\n\n    }\n\n    useEffect(() => {\n        if (data !== null)\n            signIn()\n    }, [data])\n\n    const handleFailure = (res) => {\n        alert(res)\n    }\n\n    const handleLogin = (data) => {\n        const { email, name, imageUrl, googleId } = data.profileObj\n        setData({ email, name, imageUrl, googleId })\n        setLoading(true);\n    }\n\n    if (loading)\n        return <Loader />\n    else\n        return (\n            <>\n                <NavBar />\n                <div className='google-container'>\n                    <h1>Login With Google</h1>\n                    <img src={trophy} alt=\"Winner\"></img>\n                    <br></br>\n                    <GoogleLogin\n                        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n                        buttonText=\"Login With Google\"\n                        onSuccess={handleLogin}\n                        onFailure={handleFailure}\n                        cookiePolicy={'single_host_origin'}\n                    >\n                    </GoogleLogin>\n                </div>\n            </>\n        )\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}