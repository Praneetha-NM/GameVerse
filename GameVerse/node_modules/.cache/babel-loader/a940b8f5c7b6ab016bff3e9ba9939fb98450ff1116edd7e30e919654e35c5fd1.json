{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { buildBoard, nextBoard } from \"../business/Board\";\nexport const useBoard = _ref => {\n  _s();\n  let {\n    rows,\n    columns,\n    player,\n    resetPlayer,\n    addLinesCleared\n  } = _ref;\n  const [board, setBoard] = useState(buildBoard({\n    rows,\n    columns\n  }));\n  useEffect(() => {\n    setBoard(previousBoard => nextBoard({\n      board: previousBoard,\n      player,\n      resetPlayer,\n      addLinesCleared\n    }));\n  }, [player, resetPlayer, addLinesCleared]);\n  return [board];\n};\n_s(useBoard, \"K9uT5k0qWhQI1eS3Wc0pwccJe44=\");","map":{"version":3,"names":["useState","useEffect","buildBoard","nextBoard","useBoard","rows","columns","player","resetPlayer","addLinesCleared","board","setBoard","previousBoard"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/Tetris/hooks/useBoard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { buildBoard, nextBoard } from \"../business/Board\";\n\nexport const useBoard = ({\n    rows,\n    columns,\n    player,\n    resetPlayer,\n    addLinesCleared\n}) => {\n    const [board, setBoard] = useState(buildBoard({ rows, columns }));\n\n    useEffect(() => {\n        setBoard((previousBoard) =>\n            nextBoard({\n                board: previousBoard,\n                player,\n                resetPlayer,\n                addLinesCleared\n            })\n        );\n    }, [player, resetPlayer, addLinesCleared]);\n\n    return [board];\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,UAAU,EAAEC,SAAS,QAAQ,mBAAmB;AAEzD,OAAO,MAAMC,QAAQ,GAAG,QAMlB;EAAA;EAAA,IANmB;IACrBC,IAAI;IACJC,OAAO;IACPC,MAAM;IACNC,WAAW;IACXC;EACJ,CAAC;EACG,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAACE,UAAU,CAAC;IAAEG,IAAI;IAAEC;EAAQ,CAAC,CAAC,CAAC;EAEjEL,SAAS,CAAC,MAAM;IACZU,QAAQ,CAAEC,aAAa,IACnBT,SAAS,CAAC;MACNO,KAAK,EAAEE,aAAa;MACpBL,MAAM;MACNC,WAAW;MACXC;IACJ,CAAC,CAAC,CACL;EACL,CAAC,EAAE,CAACF,MAAM,EAAEC,WAAW,EAAEC,eAAe,CAAC,CAAC;EAE1C,OAAO,CAACC,KAAK,CAAC;AAClB,CAAC;AAAC,GArBWN,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}