{"ast":null,"code":"var _jsxFileName = \"/Users/praneetha18/Downloads/games-app-main/src/components/Wordle/Key.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { BoardContext } from './Wordle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Key = _ref => {\n  _s();\n  let {\n    val,\n    bigKey,\n    disabled\n  } = _ref;\n  const {\n    board,\n    correctWord,\n    setBoard,\n    currentAttempt,\n    setCurrentAttempt,\n    wordSet,\n    setGameOver\n  } = useContext(BoardContext);\n  const selectLetter = () => {\n    if (val === \"ENTER\") {\n      if (currentAttempt.letterPos !== 5) return;\n      let currWord = \"\";\n      for (var i = 0; i < 5; i++) currWord += board[currentAttempt.attempt][i];\n      if (wordSet.has(currWord.toLowerCase())) {\n        setCurrentAttempt({\n          letterPos: 0,\n          attempt: currentAttempt.attempt + 1\n        });\n      } else {\n        alert(\"No Such Word Found\");\n\n        // Reset the row\n        const newBoard = [...board];\n        for (var i = 0; i < 5; i++) newBoard[currentAttempt.attempt][i] = \"\";\n        setBoard(newBoard);\n        setCurrentAttempt({\n          ...currentAttempt,\n          letterPos: 0\n        }); // Reset letterPos\n        return;\n      }\n      if (currWord.toLowerCase() === correctWord) {\n        setGameOver({\n          gameOver: true,\n          guessedWord: true\n        });\n        return;\n      }\n      if (currentAttempt.attempt === 5) {\n        setGameOver({\n          gameOver: true,\n          guessedWord: false\n        });\n      }\n    } else if (val === \"DELETE\") {\n      if (currentAttempt.letterPos === 0) return;\n      const newBoard = [...board];\n      newBoard[currentAttempt.attempt][currentAttempt.letterPos - 1] = \"\";\n      setCurrentAttempt({\n        ...currentAttempt,\n        letterPos: currentAttempt.letterPos - 1\n      });\n      setBoard(newBoard);\n    } else {\n      if (currentAttempt.letterPos > 4) return;\n      const newBoard = [...board];\n      newBoard[currentAttempt.attempt][currentAttempt.letterPos] = val;\n      setCurrentAttempt({\n        ...currentAttempt,\n        letterPos: currentAttempt.letterPos + 1\n      });\n      setBoard(newBoard);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wordle-key\",\n    id: bigKey ? 'big' : disabled && \"disabled\",\n    onClick: selectLetter,\n    children: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Key, \"el1QYeYAQOdoc2CJ3eNVFQWQzmk=\");\n_c = Key;\nexport default Key;\nvar _c;\n$RefreshReg$(_c, \"Key\");","map":{"version":3,"names":["React","useContext","BoardContext","Key","val","bigKey","disabled","board","correctWord","setBoard","currentAttempt","setCurrentAttempt","wordSet","setGameOver","selectLetter","letterPos","currWord","i","attempt","has","toLowerCase","alert","newBoard","gameOver","guessedWord"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/Wordle/Key.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { BoardContext } from './Wordle'\n\nconst Key = ({ val, bigKey, disabled }) => {\n    const { board,correctWord, setBoard, currentAttempt, setCurrentAttempt, wordSet, setGameOver } = useContext(BoardContext)\n\n    const selectLetter = () => {\n        if (val === \"ENTER\") {\n            if (currentAttempt.letterPos !== 5) return;\n    \n            let currWord = \"\";\n            for (var i = 0; i < 5; i++)\n                currWord += board[currentAttempt.attempt][i];\n    \n            if (wordSet.has(currWord.toLowerCase())) {\n                setCurrentAttempt({ letterPos: 0, attempt: currentAttempt.attempt + 1 });\n            } else {\n                alert(\"No Such Word Found\");\n    \n                // Reset the row\n                const newBoard = [...board];\n                for (var i = 0; i < 5; i++) newBoard[currentAttempt.attempt][i] = \"\";\n    \n                setBoard(newBoard);\n                setCurrentAttempt({ ...currentAttempt, letterPos: 0 });  // Reset letterPos\n                return;\n            }\n    \n            if (currWord.toLowerCase() === correctWord) {\n                setGameOver({ gameOver: true, guessedWord: true });\n                return;\n            }\n    \n            if (currentAttempt.attempt === 5) {\n                setGameOver({ gameOver: true, guessedWord: false });\n            }\n        } \n        else if (val === \"DELETE\") {\n            if (currentAttempt.letterPos === 0) return;\n    \n            const newBoard = [...board];\n            newBoard[currentAttempt.attempt][currentAttempt.letterPos - 1] = \"\";\n            setCurrentAttempt({ ...currentAttempt, letterPos: currentAttempt.letterPos - 1 });\n            setBoard(newBoard);\n        } \n        else {\n            if (currentAttempt.letterPos > 4) return;\n    \n            const newBoard = [...board];\n            newBoard[currentAttempt.attempt][currentAttempt.letterPos] = val;\n            setCurrentAttempt({ ...currentAttempt, letterPos: currentAttempt.letterPos + 1 });\n            setBoard(newBoard);\n        }\n    };\n    \n\n    return (\n        <div className='wordle-key' id={bigKey ? 'big' : disabled && \"disabled\"} onClick={selectLetter}>{val}</div>\n    )\n}\n\nexport default Key  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}