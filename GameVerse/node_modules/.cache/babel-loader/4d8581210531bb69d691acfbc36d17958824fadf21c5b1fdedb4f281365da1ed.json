{"ast":null,"code":"var _jsxFileName = \"/Users/praneetha18/Downloads/games-app-main/src/components/CandyCrush/CandyCrush.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './CandyCrush.css';\nimport blue from '../../assets/candies/blue.webp';\nimport green from '../../assets/candies/green.webp';\nimport orange from '../../assets/candies/orange.webp';\nimport purple from '../../assets/candies/purple.webp';\nimport red from '../../assets/candies/red.webp';\nimport yellow from '../../assets/candies/yellow.webp';\nimport blank from '../../assets/candies/blank.png';\nimport NavBar from '../Main/NavBar/NavBar';\nimport Counter from './Counter';\nimport useUserStore from '../../store/user';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WIDTH = 8;\nconst CANDY_COLORS = [blue, green, orange, purple, red, yellow];\nconst CandyCrush = () => {\n  _s();\n  const [currentColorArrangement, setcurrentColorArrangement] = useState([]);\n  const [beingDragged, setBeingDragged] = useState(null);\n  const [beingReplaced, setBeingReplaced] = useState(null);\n  const user = useUserStore(state => state.user);\n  const [score, setScore] = useState(0);\n  const createBoard = () => {\n    const randomColorArrangement = [];\n    for (let i = 0; i < WIDTH * WIDTH; i++) {\n      const color = CANDY_COLORS[Math.floor(CANDY_COLORS.length * Math.random())];\n      randomColorArrangement.push(color);\n    }\n    setcurrentColorArrangement(randomColorArrangement);\n  };\n  const checkForCol3 = () => {\n    for (let i = 0; i <= 47; i++) {\n      const colOf3 = [i, i + WIDTH, i + WIDTH * 2];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n      if (colOf3.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n        colOf3.forEach(square => currentColorArrangement[square] = blank);\n        setScore(prev => prev + 3);\n        return true;\n      }\n    }\n  };\n  const checkForCol4 = () => {\n    for (let i = 0; i <= 39; i++) {\n      const colOf4 = [i, i + WIDTH, i + WIDTH * 2, i + WIDTH * 3];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n      if (colOf4.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n        colOf4.forEach(square => currentColorArrangement[square] = blank);\n        setScore(prev => prev + 4);\n        return true;\n      }\n    }\n  };\n  const checkForRow3 = () => {\n    for (let i = 0; i < 64; i++) {\n      const rowOf3 = [i, i + 1, i + 2];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n      const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64];\n      if (notValid.includes(i)) continue;\n      if (rowOf3.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n        rowOf3.forEach(square => currentColorArrangement[square] = blank);\n        setScore(prev => prev + 3);\n        return true;\n      }\n    }\n  };\n  const checkForRow4 = () => {\n    for (let i = 0; i < 39; i++) {\n      const rowOf4 = [i, i + 1, i + 2, i + 3];\n      const decidedColor = currentColorArrangement[i];\n      const isBlank = currentColorArrangement[i] === blank;\n      const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64];\n      if (notValid.includes(i)) continue;\n      if (rowOf4.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n        rowOf4.forEach(square => currentColorArrangement[square] = blank);\n        setScore(prev => prev + 4);\n        return true;\n      }\n    }\n  };\n  const moveIntoSquareBelow = () => {\n    for (let i = 0; i <= 64 - WIDTH; i++) {\n      const firstRow = [0, 1, 2, 3, 4, 5, 6, 7];\n      const isFirstRow = firstRow.includes(i);\n      if (isFirstRow && currentColorArrangement[i] === blank) {\n        const color = CANDY_COLORS[Math.floor(CANDY_COLORS.length * Math.random())];\n        currentColorArrangement[i] = color;\n      }\n      if (currentColorArrangement[i + WIDTH] === blank) {\n        currentColorArrangement[i + WIDTH] = currentColorArrangement[i];\n        currentColorArrangement[i] = blank;\n      }\n    }\n  };\n  const dragStart = e => {\n    setBeingDragged(e.target);\n  };\n  const dragDrop = e => {\n    setBeingReplaced(e.target);\n  };\n  const dragEnd = () => {\n    const replaceId = parseInt(beingReplaced.getAttribute('data-id'));\n    const dragId = parseInt(beingDragged.getAttribute('data-id'));\n    currentColorArrangement[replaceId] = beingDragged.getAttribute('src');\n    currentColorArrangement[dragId] = beingReplaced.getAttribute('src');\n    const validMoves = [dragId - 1, dragId - WIDTH, dragId + 1, dragId + WIDTH];\n    const isValidMove = validMoves.includes(replaceId);\n    if (isValidMove && replaceId && (checkForCol4() || checkForCol3() || checkForRow4() || checkForRow3())) {\n      setBeingDragged(null);\n      setBeingReplaced(null);\n    } else {\n      currentColorArrangement[replaceId] = beingReplaced.getAttribute('src');\n      currentColorArrangement[dragId] = beingDragged.getAttribute('src');\n      setcurrentColorArrangement([...currentColorArrangement]);\n    }\n  };\n  useEffect(() => {\n    createBoard();\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      checkForCol4();\n      checkForRow4();\n      checkForCol3();\n      checkForRow3();\n      moveIntoSquareBelow();\n      setcurrentColorArrangement([...currentColorArrangement]);\n    }, 100);\n    return () => clearInterval(timer);\n  }, [checkForCol4, checkForCol3, checkForRow4, checkForRow3, moveIntoSquareBelow, currentColorArrangement]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"candy-crush-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"CandyCrush\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cc-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Current Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Counter, {\n          score: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your High Score : \", user.candyCrush.highScore]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game\",\n        children: currentColorArrangement.map((color, index) => {\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: color,\n            alt: color,\n            \"data-id\": index,\n            draggable: true,\n            onDragStart: dragStart,\n            onDragOver: e => {\n              e.preventDefault();\n            },\n            onDragEnter: e => {\n              e.preventDefault();\n            },\n            onDrop: dragDrop,\n            onDragEnd: dragEnd\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(CandyCrush, \"Je46Gl+kDZG8PYqXim/3jN2TDNc=\", false, function () {\n  return [useUserStore];\n});\n_c = CandyCrush;\nexport default CandyCrush;\nvar _c;\n$RefreshReg$(_c, \"CandyCrush\");","map":{"version":3,"names":["React","useEffect","useState","blue","green","orange","purple","red","yellow","blank","NavBar","Counter","useUserStore","WIDTH","CANDY_COLORS","CandyCrush","currentColorArrangement","setcurrentColorArrangement","beingDragged","setBeingDragged","beingReplaced","setBeingReplaced","user","state","score","setScore","createBoard","randomColorArrangement","i","color","Math","floor","length","random","push","checkForCol3","colOf3","decidedColor","isBlank","every","square","forEach","prev","checkForCol4","colOf4","checkForRow3","rowOf3","notValid","includes","checkForRow4","rowOf4","moveIntoSquareBelow","firstRow","isFirstRow","dragStart","e","target","dragDrop","dragEnd","replaceId","parseInt","getAttribute","dragId","validMoves","isValidMove","timer","setInterval","clearInterval","candyCrush","highScore","map","index","preventDefault"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/CandyCrush/CandyCrush.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './CandyCrush.css'\n\nimport blue from '../../assets/candies/blue.webp'\nimport green from '../../assets/candies/green.webp'\nimport orange from '../../assets/candies/orange.webp'\nimport purple from '../../assets/candies/purple.webp'\nimport red from '../../assets/candies/red.webp'\nimport yellow from '../../assets/candies/yellow.webp'\nimport blank from '../../assets/candies/blank.png'\nimport NavBar from '../Main/NavBar/NavBar'\nimport Counter from './Counter'\nimport useUserStore from '../../store/user'\n\nconst WIDTH = 8;\nconst CANDY_COLORS = [\n    blue,\n    green,\n    orange,\n    purple,\n    red,\n    yellow\n]\n\nconst CandyCrush = () => {\n    const [currentColorArrangement, setcurrentColorArrangement] = useState([])\n    const [beingDragged, setBeingDragged] = useState(null)\n    const [beingReplaced, setBeingReplaced] = useState(null)\n    const user = useUserStore(state => state.user)\n    const [score, setScore] = useState(0)\n\n    const createBoard = () => {\n        const randomColorArrangement = [];\n        for (let i = 0; i < WIDTH * WIDTH; i++) {\n            const color = CANDY_COLORS[Math.floor(CANDY_COLORS.length * Math.random())]\n            randomColorArrangement.push(color)\n        }\n        setcurrentColorArrangement(randomColorArrangement)\n    }\n\n    const checkForCol3 = () => {\n        for (let i = 0; i <= 47; i++) {\n            const colOf3 = [i, i + WIDTH, i + WIDTH * 2];\n            const decidedColor = currentColorArrangement[i];\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (colOf3.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n                colOf3.forEach(square => currentColorArrangement[square] = blank)\n                setScore(prev => prev + 3)\n                return true;\n            }\n        }\n    }\n\n    const checkForCol4 = () => {\n        for (let i = 0; i <= 39; i++) {\n            const colOf4 = [i, i + WIDTH, i + WIDTH * 2, i + WIDTH * 3];\n            const decidedColor = currentColorArrangement[i];\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (colOf4.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n                colOf4.forEach(square => currentColorArrangement[square] = blank)\n                setScore(prev => prev + 4)\n                return true;\n            }\n        }\n    }\n\n    const checkForRow3 = () => {\n        for (let i = 0; i < 64; i++) {\n            const rowOf3 = [i, i + 1, i + 2];\n            const decidedColor = currentColorArrangement[i];\n            const isBlank = currentColorArrangement[i] === blank\n\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\n\n            if (notValid.includes(i)) continue;\n\n            if (rowOf3.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n                rowOf3.forEach(square => currentColorArrangement[square] = blank)\n                setScore(prev => prev + 3)\n                return true;\n            }\n        }\n    }\n\n    const checkForRow4 = () => {\n        for (let i = 0; i < 39; i++) {\n            const rowOf4 = [i, i + 1, i + 2, i + 3];\n            const decidedColor = currentColorArrangement[i];\n            const isBlank = currentColorArrangement[i] === blank\n\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\n\n            if (notValid.includes(i)) continue;\n\n            if (rowOf4.every(square => currentColorArrangement[square] === decidedColor) && !isBlank) {\n                rowOf4.forEach(square => currentColorArrangement[square] = blank)\n                setScore(prev => prev + 4)\n                return true;\n            }\n        }\n    }\n\n    const moveIntoSquareBelow = () => {\n        for (let i = 0; i <= 64 - WIDTH; i++) {\n            const firstRow = [0, 1, 2, 3, 4, 5, 6, 7]\n            const isFirstRow = firstRow.includes(i)\n\n            if (isFirstRow && currentColorArrangement[i] === blank) {\n                const color = CANDY_COLORS[Math.floor(CANDY_COLORS.length * Math.random())]\n                currentColorArrangement[i] = color\n            }\n\n            if (currentColorArrangement[i + WIDTH] === blank) {\n                currentColorArrangement[i + WIDTH] = currentColorArrangement[i]\n                currentColorArrangement[i] = blank\n            }\n        }\n    }\n\n    const dragStart = (e) => {\n        setBeingDragged(e.target)\n    }\n\n    const dragDrop = (e) => {\n        setBeingReplaced(e.target)\n    }\n\n    const dragEnd = () => {\n        const replaceId = parseInt(beingReplaced.getAttribute('data-id'))\n        const dragId = parseInt(beingDragged.getAttribute('data-id'))\n\n        currentColorArrangement[replaceId] = beingDragged.getAttribute('src')\n        currentColorArrangement[dragId] = beingReplaced.getAttribute('src')\n\n        const validMoves = [dragId - 1, dragId - WIDTH, dragId + 1, dragId + WIDTH]\n        const isValidMove = validMoves.includes(replaceId)\n\n        if (isValidMove && replaceId &&\n            (checkForCol4() || checkForCol3() || checkForRow4() || checkForRow3())) {\n            setBeingDragged(null)\n            setBeingReplaced(null)\n        }\n        else {\n            currentColorArrangement[replaceId] = beingReplaced.getAttribute('src')\n            currentColorArrangement[dragId] = beingDragged.getAttribute('src')\n            setcurrentColorArrangement([...currentColorArrangement])\n        }\n\n    }\n\n    useEffect(() => {\n        createBoard();\n    }, [])\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            checkForCol4();\n            checkForRow4();\n            checkForCol3();\n            checkForRow3();\n            moveIntoSquareBelow();\n            setcurrentColorArrangement([...currentColorArrangement])\n        }, 100)\n\n        return () => clearInterval(timer)\n    }, [checkForCol4, checkForCol3, checkForRow4, checkForRow3, moveIntoSquareBelow, currentColorArrangement])\n\n    return (\n        <>\n            <NavBar />\n            <div className='candy-crush-app'>\n                <h1>CandyCrush</h1>\n                <div className='cc-score'>\n                    <h3>Current Score: {score}</h3>\n                    <Counter score={score} />\n                    <h3>Your High Score : {user.candyCrush.highScore}</h3>\n                </div>\n                <br></br>\n                <div className='game'>\n                    {currentColorArrangement.map((color, index) => {\n                        return <img\n                            key={index}\n                            src={color}\n                            alt={color}\n                            data-id={index}\n                            draggable={true}\n                            onDragStart={dragStart}\n                            onDragOver={(e) => { e.preventDefault() }}\n                            onDragEnter={(e) => { e.preventDefault() }}\n                            onDrop={dragDrop}\n                            onDragEnd={dragEnd}\n                        ></img>\n                    })}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default CandyCrush"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}