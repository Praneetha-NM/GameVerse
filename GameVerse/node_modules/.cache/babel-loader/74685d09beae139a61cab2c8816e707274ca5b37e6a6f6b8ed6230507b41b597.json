{"ast":null,"code":"var _jsxFileName = \"/Users/praneetha18/Downloads/games-app-main/src/components/2048/Stats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useUserStore from '../../store/user';\nimport Loader from '../Loader/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stats = _ref => {\n  _s();\n  let {\n    score,\n    loading\n  } = _ref;\n  const user = useUserStore(state => state.user);\n  const token = useUserStore(state => state.token);\n  const getUser = useUserStore(state => state.getUser);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const updateScore = async () => {\n      try {\n        const res = await fetch(`${process.env.REACT_APP_BASE_URL}/update-score`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` // ✅ Ensure token is correct\n          },\n\n          body: JSON.stringify({\n            game: '2048',\n            score\n          })\n        });\n        const resData = await res.json(); // ✅ Get response data\n        console.log(\"Response Status:\", res.status);\n        console.log(\"Response Data:\", resData); // ✅ Log the error details\n\n        await getUser(token);\n        if (res.status === 200) {\n          navigate(\"/2048/rules\");\n        } else {\n          alert(`Could Not Save Scores: ${resData.message || \"Unknown Error\"}`); // ✅ Show error message\n        }\n      } catch (error) {\n        console.error(\"Error updating score:\", error);\n      }\n    };\n    if (loading && typeof score === \"number\") {\n      // ✅ Ensure score is valid\n      updateScore();\n    }\n  }, [loading, getUser, navigate, score, token]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"2048\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Name : \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"HighScore:\", user.tzfe.highScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Stats, \"ud15VrybB6fbdB3VTaij6hfRoyA=\", false, function () {\n  return [useUserStore, useUserStore, useUserStore, useNavigate];\n});\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useEffect","useNavigate","useUserStore","Loader","Stats","score","loading","user","state","token","getUser","navigate","updateScore","res","fetch","process","env","REACT_APP_BASE_URL","method","headers","Authorization","body","JSON","stringify","game","resData","json","console","log","status","alert","message","error","name","tzfe","highScore"],"sources":["/Users/praneetha18/Downloads/games-app-main/src/components/2048/Stats.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useUserStore from '../../store/user'\nimport Loader from '../Loader/Loader'\n\nconst Stats = ({ score, loading }) => {\n    const user = useUserStore((state) => state.user)\n    const token = useUserStore(state => state.token)\n    const getUser = useUserStore(state => state.getUser)\n    const navigate = useNavigate()\n\n    useEffect(() => {\n        const updateScore = async () => {\n            try {\n                const res = await fetch(`${process.env.REACT_APP_BASE_URL}/update-score`, {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: `Bearer ${token}`,  // ✅ Ensure token is correct\n                    },\n                    body: JSON.stringify({ game: '2048', score }),\n                });\n        \n                const resData = await res.json(); // ✅ Get response data\n                console.log(\"Response Status:\", res.status);\n                console.log(\"Response Data:\", resData); // ✅ Log the error details\n        \n                await getUser(token);\n        \n                if (res.status === 200) {\n                    navigate(\"/2048/rules\");\n                } else {\n                    alert(`Could Not Save Scores: ${resData.message || \"Unknown Error\"}`); // ✅ Show error message\n                }\n            } catch (error) {\n                console.error(\"Error updating score:\", error);\n            }\n        };\n        \n    \n        if (loading && typeof score === \"number\") {  // ✅ Ensure score is valid\n            updateScore();\n        }\n    }, [loading, getUser, navigate, score, token]);\n    \n\n    if (loading)\n        return <Loader />\n\n    return (\n        <div className='stats'>\n            <h1>2048</h1>\n            <h3>Name : {user.name}</h3>\n            <h3>Score: {score}</h3>\n            <h3>HighScore:{user.tzfe.highScore}</h3>\n        </div>\n    )\n}\n\nexport default Stats"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,kBAAkB;AAC3C,OAAOC,MAAM,MAAM,kBAAkB;AAAA;AAErC,MAAMC,KAAK,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC,KAAK;IAAEC;EAAQ,CAAC;EAC7B,MAAMC,IAAI,GAAGL,YAAY,CAAEM,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAChD,MAAME,KAAK,GAAGP,YAAY,CAACM,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EAChD,MAAMC,OAAO,GAAGR,YAAY,CAACM,KAAK,IAAIA,KAAK,CAACE,OAAO,CAAC;EACpD,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAMY,WAAW,GAAG,YAAY;MAC5B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,kBAAmB,eAAc,EAAE;UACtEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASX,KAAM,EAAC,CAAG;UACvC,CAAC;;UACDY,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAE,MAAM;YAAEnB;UAAM,CAAC;QAChD,CAAC,CAAC;QAEF,MAAMoB,OAAO,GAAG,MAAMZ,GAAG,CAACa,IAAI,EAAE,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,GAAG,CAACgB,MAAM,CAAC;QAC3CF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,OAAO,CAAC,CAAC,CAAC;;QAExC,MAAMf,OAAO,CAACD,KAAK,CAAC;QAEpB,IAAII,GAAG,CAACgB,MAAM,KAAK,GAAG,EAAE;UACpBlB,QAAQ,CAAC,aAAa,CAAC;QAC3B,CAAC,MAAM;UACHmB,KAAK,CAAE,0BAAyBL,OAAO,CAACM,OAAO,IAAI,eAAgB,EAAC,CAAC,CAAC,CAAC;QAC3E;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAGD,IAAI1B,OAAO,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;MAAG;MACzCO,WAAW,EAAE;IACjB;EACJ,CAAC,EAAE,CAACN,OAAO,EAAEI,OAAO,EAAEC,QAAQ,EAAEN,KAAK,EAAEI,KAAK,CAAC,CAAC;EAG9C,IAAIH,OAAO,EACP,oBAAO,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAAG;EAErB,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK,eACb;MAAA,WAAI,SAAO,EAACC,IAAI,CAAC0B,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC3B;MAAA,WAAI,SAAO,EAAC5B,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACvB;MAAA,WAAI,YAAU,EAACE,IAAI,CAAC2B,IAAI,CAACC,SAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACtC;AAEd,CAAC;AAAA,GApDK/B,KAAK;EAAA,QACMF,YAAY,EACXA,YAAY,EACVA,YAAY,EACXD,WAAW;AAAA;AAAA,KAJ1BG,KAAK;AAsDX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}